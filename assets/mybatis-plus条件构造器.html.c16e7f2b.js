import{_ as n,a as s,b as a,c as t,d as e,e as p,f as o,g as c,h as l,i,j as u}from"./bk172.98a7992f.js";import{_ as r}from"./plugin-vue_export-helper.21dcd24c.js";import{o as k,c as d,a as m}from"./app.73ec3e73.js";const v={},b=m(`<h1 id="mybatis-plus\u6761\u4EF6\u6784\u9020\u5668" tabindex="-1"><a class="header-anchor" href="#mybatis-plus\u6761\u4EF6\u6784\u9020\u5668" aria-hidden="true">#</a> mybatis-plus\u6761\u4EF6\u6784\u9020\u5668</h1><ul><li>Wrapper \uFF1A \u6761\u4EF6\u6784\u9020\u62BD\u8C61\u7C7B\uFF0C\u6700\u9876\u7AEF\u7236\u7C7B <ul><li>AbstractWrapper \uFF1A \u7528\u4E8E\u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5\uFF0C\u751F\u6210 sql \u7684 where \u6761\u4EF6 <ul><li>QueryWrapper \uFF1A \u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5</li><li>UpdateWrapper \uFF1A Update \u6761\u4EF6\u5C01\u88C5</li><li>AbstractLambdaWrapper \uFF1A \u4F7F\u7528Lambda \u8BED\u6CD5 <ul><li>LambdaQueryWrapper \uFF1A\u7528\u4E8ELambda\u8BED\u6CD5\u4F7F\u7528\u7684\u67E5\u8BE2Wrapper</li><li>LambdaUpdateWrapper \uFF1A Lambda \u66F4\u65B0\u5C01\u88C5Wrapper</li></ul></li></ul></li></ul></li></ul><h2 id="\u5E38\u7528\u6761\u4EF6\u6784\u9020\u5668" tabindex="-1"><a class="header-anchor" href="#\u5E38\u7528\u6761\u4EF6\u6784\u9020\u5668" aria-hidden="true">#</a> \u5E38\u7528\u6761\u4EF6\u6784\u9020\u5668</h2><h3 id="eq" tabindex="-1"><a class="header-anchor" href="#eq" aria-hidden="true">#</a> eq</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>eq(R column, Object val)
eq(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7B49\u4E8E = \u4F8B: eq(&quot;name&quot;, &quot;\u8001\u738B&quot;)---&gt;name = &#39;\u8001\u738B&#39;</p><h3 id="ne" tabindex="-1"><a class="header-anchor" href="#ne" aria-hidden="true">#</a> ne</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ne(R column, Object val)
ne(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0D\u7B49\u4E8E &lt;&gt; \u4F8B: ne(&quot;name&quot;, &quot;\u8001\u738B&quot;)---&gt;name &lt;&gt; &#39;\u8001\u738B&#39;</p><h3 id="gt" tabindex="-1"><a class="header-anchor" href="#gt" aria-hidden="true">#</a> gt</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>gt(R column, Object val)
gt(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u4E8E &gt; \u4F8B: gt(&quot;age&quot;, 18)---&gt;age &gt; 18</p><h3 id="ge" tabindex="-1"><a class="header-anchor" href="#ge" aria-hidden="true">#</a> ge</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>ge(R column, Object val)
ge(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5927\u4E8E\u7B49\u4E8E &gt;= \u4F8B: ge(&quot;age&quot;, 18)---&gt;age &gt;= 18</p><h3 id="lt" tabindex="-1"><a class="header-anchor" href="#lt" aria-hidden="true">#</a> lt</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>lt(R column, Object val)
lt(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C0F\u4E8E &lt; \u4F8B: lt(&quot;age&quot;, 18)---&gt;age &lt; 18</p><h3 id="le" tabindex="-1"><a class="header-anchor" href="#le" aria-hidden="true">#</a> le</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>le(R column, Object val)
le(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C0F\u4E8E\u7B49\u4E8E &lt;= \u4F8B: le(&quot;age&quot;, 18)---&gt;age &lt;= 18</p><h3 id="between" tabindex="-1"><a class="header-anchor" href="#between" aria-hidden="true">#</a> between</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>between(R column, Object val1, Object val2)
between(boolean condition, R column, Object val1, Object val2)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>BETWEEN \u503C1 AND \u503C2 \u4F8B: between(&quot;age&quot;, 18, 30)---&gt;age between 18 and 30</p><h3 id="like" tabindex="-1"><a class="header-anchor" href="#like" aria-hidden="true">#</a> like</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>like(R column, Object val)
like(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>LIKE &#39;%\u503C%&#39; \u4F8B: like(&quot;name&quot;, &quot;\u738B&quot;)---&gt;name like &#39;%\u738B%&#39;</p><h3 id="notlike" tabindex="-1"><a class="header-anchor" href="#notlike" aria-hidden="true">#</a> notLike</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>notLike(R column, Object val)
notLike(boolean condition, R column, Object val)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>NOT LIKE &#39;%\u503C%&#39; \u4F8B: notLike(&quot;name&quot;, &quot;\u738B&quot;)---&gt;name not like &#39;%\u738B%&#39; \u4F8B: notInSql(&quot;id&quot;, &quot;select id from table where id &lt; 3&quot;)---&gt;id not in (select id from table where id &lt; 3)</p><h3 id="group-by" tabindex="-1"><a class="header-anchor" href="#group-by" aria-hidden="true">#</a> group by</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>groupBy(R... columns)
groupBy(boolean condition, R... columns)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5206\u7EC4\uFF1AGROUP BY \u5B57\u6BB5, ... \u4F8B: groupBy(&quot;id&quot;, &quot;name&quot;)---&gt;group by id,name</p><h3 id="orderbyasc" tabindex="-1"><a class="header-anchor" href="#orderbyasc" aria-hidden="true">#</a> orderByAsc</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>orderByAsc(R... columns)
orderByAsc(boolean condition, R... columns)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6392\u5E8F\uFF1AORDER BY \u5B57\u6BB5, ... ASC \u4F8B: orderByAsc(&quot;id&quot;, &quot;name&quot;)---&gt;order by id ASC,name ASC</p><h3 id="orderbydesc" tabindex="-1"><a class="header-anchor" href="#orderbydesc" aria-hidden="true">#</a> orderByDesc</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>orderByDesc(R... columns)
orderByDesc(boolean condition, R... columns)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6392\u5E8F\uFF1AORDER BY \u5B57\u6BB5, ... DESC \u4F8B: orderByDesc(&quot;id&quot;, &quot;name&quot;)---&gt;order by id DESC,name DESC</p><h3 id="orderby" tabindex="-1"><a class="header-anchor" href="#orderby" aria-hidden="true">#</a> orderBy</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>orderBy(boolean condition, boolean isAsc, R... columns)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u6392\u5E8F\uFF1AORDER BY \u5B57\u6BB5, ... \u4F8B: orderBy(true, true, &quot;id&quot;, &quot;name&quot;)---&gt;order by id ASC,name ASC</p><h3 id="or" tabindex="-1"><a class="header-anchor" href="#or" aria-hidden="true">#</a> or</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>or()
or(boolean condition)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u62FC\u63A5 OR \u6CE8\u610F\u4E8B\u9879:\u4E3B\u52A8\u8C03\u7528or\u8868\u793A\u7D27\u63A5\u7740\u4E0B\u4E00\u4E2A\u65B9\u6CD5\u4E0D\u662F\u7528and\u8FDE\u63A5!(\u4E0D\u8C03\u7528or\u5219\u9ED8\u8BA4\u4E3A\u4F7F\u7528and\u8FDE\u63A5) \u4F8B: eq(&quot;id&quot;,1).or().eq(&quot;name&quot;,&quot;\u8001\u738B&quot;)---&gt;id = 1 or name = &#39;\u8001\u738B&#39;</p><h2 id="querywrapper-\u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#querywrapper-\u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5" aria-hidden="true">#</a> QueryWrapper \u67E5\u8BE2\u6761\u4EF6\u5C01\u88C5</h2><h3 id="\u4F8B1-\u7EC4\u88C5\u67E5\u8BE2\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F8B1-\u7EC4\u88C5\u67E5\u8BE2\u6761\u4EF6" aria-hidden="true">#</a> \u4F8B1\uFF1A\u7EC4\u88C5\u67E5\u8BE2\u6761\u4EF6</h3><p>\u65B0\u5EFA\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test01</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>imooc</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>baomidou<span class="token punctuation">.</span>mybatisplus<span class="token punctuation">.</span>core<span class="token punctuation">.</span>conditions<span class="token punctuation">.</span>query<span class="token punctuation">.</span></span><span class="token class-name">QueryWrapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>imooc<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span></span><span class="token class-name">UserMapper</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>imooc<span class="token punctuation">.</span>pojo<span class="token punctuation">.</span></span><span class="token class-name">User</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>jupiter<span class="token punctuation">.</span>api<span class="token punctuation">.</span></span><span class="token class-name">Test</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span></span><span class="token class-name">SpringBootTest</span></span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@SpringBootTest</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">MybatisPlusServiceTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Autowired</span>
    <span class="token keyword">private</span> <span class="token class-name">UserMapper</span> userMapper<span class="token punctuation">;</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test01</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u67E5\u8BE2\u7528\u6237\u540D\u5305\u542Ba\uFF0C\u5E74\u9F84\u572820\u523030\u4E4B\u95F4\uFF0C\u5E76\u4E14\u90AE\u7BB1\u4E0D\u4E3Anull\u7684\u7528\u6237\u4FE1\u606F</span>
        <span class="token comment">// SELECT id,name AS name,age,email,is_deleted FROM user WHERE is_deleted=0 AND (name LIKE ? AND age BETWEEN ? AND ? AND email IS NOT NULL)</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">between</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">isNotNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+n+`" alt="solar"><h3 id="\u4F8B2-\u7EC4\u88C5\u6392\u5E8F\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F8B2-\u7EC4\u88C5\u6392\u5E8F\u6761\u4EF6" aria-hidden="true">#</a> \u4F8B2\uFF1A\u7EC4\u88C5\u6392\u5E8F\u6761\u4EF6</h3><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test02</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span> 
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test02</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span> 
        <span class="token comment">//\u6309\u5E74\u9F84\u964D\u5E8F\u67E5\u8BE2\u7528\u6237\uFF0C\u5982\u679C\u5E74\u9F84\u76F8\u540C\u5219\u6309id\u5347\u5E8F\u6392\u5217 </span>
        <span class="token comment">// SELECT id,name AS name,age,email,is_deleted FROM user WHERE is_deleted=0 ORDER BY age DESC,id ASC </span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        queryWrapper <span class="token punctuation">.</span><span class="token function">orderByDesc</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">orderByAsc</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+s+`" alt="solar"><h3 id="\u4F8B3-\u7EC4\u88C5\u5220\u9664\u6761\u4EF6" tabindex="-1"><a class="header-anchor" href="#\u4F8B3-\u7EC4\u88C5\u5220\u9664\u6761\u4EF6" aria-hidden="true">#</a> \u4F8B3\uFF1A\u7EC4\u88C5\u5220\u9664\u6761\u4EF6</h3><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test03</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test03</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token comment">//\u5220\u9664email\u4E3A\u7A7A\u7684\u7528\u6237</span>
        <span class="token comment">// DELETE FROM user WHERE (email IS NULL)</span>
        <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        queryWrapper<span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token comment">//\u6761\u4EF6\u6784\u9020\u5668\u4E5F\u53EF\u4EE5\u6784\u5EFA\u5220\u9664\u8BED\u53E5\u7684\u6761\u4EF6 </span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span> 
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+a+`" alt="solar"><h3 id="\u4F8B4-\u6761\u4EF6\u7684\u4F18\u5148\u7EA7" tabindex="-1"><a class="header-anchor" href="#\u4F8B4-\u6761\u4EF6\u7684\u4F18\u5148\u7EA7" aria-hidden="true">#</a> \u4F8B4\uFF1A\u6761\u4EF6\u7684\u4F18\u5148\u7EA7</h3><p>\u65B9\u5F0F\u4E00\uFF1A\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test04</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5C06\uFF08\u5E74\u9F84\u5927\u4E8E20\u5E76\u4E14\u7528\u6237\u540D\u4E2D\u5305\u542B\u6709a\uFF09\u6216\u90AE\u7BB1\u4E3Anull\u7684\u7528\u6237\u4FE1\u606F\u4FEE\u6539</span>
    <span class="token comment">// UPDATE user SET age=?, email=? WHERE (name LIKE ? AND age &gt; ? OR email IS NULL)</span>
    queryWrapper
            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;user@atguigu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u65B9\u5F0F\u4E8C\uFF1A\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test04</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test04</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u5C06\u7528\u6237\u540D\u4E2D\u5305\u542B\u6709a\u5E76\u4E14\uFF08\u5E74\u9F84\u5927\u4E8E20\u6216\u90AE\u7BB1\u4E3Anull\uFF09\u7684\u7528\u6237\u4FE1\u606F\u4FEE\u6539</span>
    <span class="token comment">// UPDATE user SET age=?, email=? WHERE (name LIKE ? AND (age &gt; ? OR email IS NULL))</span>
    <span class="token comment">// lambda\u8868\u8FBE\u5F0F\u5185\u7684\u903B\u8F91\u4F18\u5148\u8FD0\u7B97 queryWrapper</span>
    queryWrapper
            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span> 
            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    user<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    user<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">&quot;user@atguigu.com&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span> 
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+t+`" alt="solar"><h3 id="\u4F8B5-\u7EC4\u88C5select\u5B50\u53E5" tabindex="-1"><a class="header-anchor" href="#\u4F8B5-\u7EC4\u88C5select\u5B50\u53E5" aria-hidden="true">#</a> \u4F8B5\uFF1A\u7EC4\u88C5select\u5B50\u53E5</h3><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test05</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test05</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u67E5\u8BE2\u7528\u6237\u4FE1\u606F\u7684name\u548Cage\u5B57\u6BB5</span>
    <span class="token comment">// SELECT name,age FROM user</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//selectMaps()\u8FD4\u56DEMap\u96C6\u5408\u5217\u8868\uFF0C\u901A\u5E38\u914D\u5408select()\u4F7F\u7528\uFF0C\u907F\u514DUser\u5BF9\u8C61\u4E2D\u6CA1\u6709\u88AB\u67E5\u8BE2\u5230\u7684\u5217\u503C \u4E3Anull</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> maps <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectMaps</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    maps<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+e+`" alt="solar"><h3 id="\u4F8B6-\u5B9E\u73B0\u5B50\u67E5\u8BE2" tabindex="-1"><a class="header-anchor" href="#\u4F8B6-\u5B9E\u73B0\u5B50\u67E5\u8BE2" aria-hidden="true">#</a> \u4F8B6\uFF1A\u5B9E\u73B0\u5B50\u67E5\u8BE2</h3><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test06</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test06</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u67E5\u8BE2id\u5C0F\u4E8E\u7B49\u4E8E3\u7684\u7528\u6237\u4FE1\u606F</span>
    <span class="token comment">// SELECT id,name AS name,age,email,is_deleted FROM user WHERE (id IN (select id from user where id &lt;= 3))</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    queryWrapper<span class="token punctuation">.</span><span class="token function">inSql</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;select id from user where id &lt;= 3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    list<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+p+`" alt="solar"><h2 id="updatewrapper-update-\u6761\u4EF6\u5C01\u88C5" tabindex="-1"><a class="header-anchor" href="#updatewrapper-update-\u6761\u4EF6\u5C01\u88C5" aria-hidden="true">#</a> UpdateWrapper Update \u6761\u4EF6\u5C01\u88C5</h2><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test07</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test07</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">//\u5C06\uFF08\u5E74\u9F84\u5927\u4E8E20\u6216\u90AE\u7BB1\u4E3Anull\uFF09\u5E76\u4E14\u7528\u6237\u540D\u4E2D\u5305\u542B\u6709a\u7684\u7528\u6237\u4FE1\u606F\u4FEE\u6539</span>
        <span class="token comment">// \u7EC4\u88C5set\u5B50\u53E5\u4EE5\u53CA\u4FEE\u6539\u6761\u4EF6</span>
        <span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">UpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// lambda\u8868\u8FBE\u5F0F\u5185\u7684\u903B\u8F91\u4F18\u5148\u8FD0\u7B97</span>
        updateWrapper
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;12343545@atguigu.com&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;name&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token string">&quot;email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//\u8FD9\u91CC\u5FC5\u987B\u8981\u521B\u5EFAUser\u5BF9\u8C61\uFF0C\u5426\u5219\u65E0\u6CD5\u5E94\u7528\u81EA\u52A8\u586B\u5145\u3002\u5982\u679C\u6CA1\u6709\u81EA\u52A8\u586B\u5145\uFF0C\u53EF\u4EE5\u8BBE\u7F6E\u4E3Anull</span>
        <span class="token comment">// UPDATE user SET user=?, age=?,email=? WHERE (user LIKE ? AND (age &gt; ? OR email IS NULL))</span>
        <span class="token comment">// User user = new User();</span>
        <span class="token comment">// user.setName(&quot;\u5F20\u4E09&quot;);</span>
        <span class="token comment">//int result = userMapper.update(user, updateWrapper);</span>
        <span class="token comment">// UPDATE user SET age=?,email=? WHERE (user LIKE ? AND (age &gt; ? OR email IS NULL))</span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+o+`" alt="solar"><h3 id="condition" tabindex="-1"><a class="header-anchor" href="#condition" aria-hidden="true">#</a> condition</h3><p>\u5728\u771F\u6B63\u5F00\u53D1\u7684\u8FC7\u7A0B\u4E2D\uFF0C\u7EC4\u88C5\u6761\u4EF6\u662F\u5E38\u89C1\u7684\u529F\u80FD\uFF0C\u800C\u8FD9\u4E9B\u6761\u4EF6\u6570\u636E\u6765\u6E90\u4E8E\u7528\u6237\u8F93\u5165\uFF0C\u662F\u53EF\u9009\u7684\uFF0C\u56E0 \u6B64\u6211\u4EEC\u5728\u7EC4\u88C5\u8FD9\u4E9B\u6761\u4EF6\u65F6\uFF0C\u5FC5\u987B\u5148\u5224\u65AD\u7528\u6237\u662F\u5426\u9009\u62E9\u4E86\u8FD9\u4E9B\u6761\u4EF6\uFF0C\u82E5\u9009\u62E9\u5219\u9700\u8981\u7EC4\u88C5\u8BE5\u6761\u4EF6\uFF0C\u82E5 \u6CA1\u6709\u9009\u62E9\u5219\u4E00\u5B9A\u4E0D\u80FD\u7EC4\u88C5\uFF0C\u4EE5\u514D\u5F71\u54CDSQL\u6267\u884C\u7684\u7ED3\u679C</p><p><strong>\u601D\u8DEF\u4E00\uFF1A</strong></p><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test08</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test08</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5B9A\u4E49\u67E5\u8BE2\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4E3Anull\uFF08\u7528\u6237\u672A\u8F93\u5165\u6216\u672A\u9009\u62E9\uFF09</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> ageBegin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> ageEnd <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//StringUtils.isNotBlank()\u5224\u65AD\u67D0\u5B57\u7B26\u4E32\u662F\u5426\u4E0D\u4E3A\u7A7A\u4E14\u957F\u5EA6\u4E0D\u4E3A0\u4E14\u4E0D\u7531\u7A7A\u767D\u7B26(whitespace) \u6784\u6210</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        queryWrapper<span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ageBegin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        queryWrapper<span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageBegin<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>ageEnd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        queryWrapper<span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (age &gt;= ? AND age &lt;= ?)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+c+`" alt="solar"><p><strong>\u601D\u8DEF\u4E8C\uFF1A</strong></p><p>\u4E0A\u9762\u7684\u5B9E\u73B0\u65B9\u6848\u6CA1\u6709\u95EE\u9898\uFF0C\u4F46\u662F\u4EE3\u7801\u6BD4\u8F83\u590D\u6742\uFF0C\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528\u5E26condition\u53C2\u6570\u7684\u91CD\u8F7D\u65B9\u6CD5\u6784\u5EFA\u67E5 \u8BE2\u6761\u4EF6\uFF0C\u7B80\u5316\u4EE3\u7801\u7684\u7F16\u5199</p><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test08UseCondition</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test08UseCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5B9A\u4E49\u67E5\u8BE2\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4E3Anull\uFF08\u7528\u6237\u672A\u8F93\u5165\u6216\u672A\u9009\u62E9\uFF09</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> ageBegin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> ageEnd <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
    <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">QueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//StringUtils.isNotBlank()\u5224\u65AD\u67D0\u5B57\u7B26\u4E32\u662F\u5426\u4E0D\u4E3A\u7A7A\u4E14\u957F\u5EA6\u4E0D\u4E3A0\u4E14\u4E0D\u7531\u7A7A\u767D\u7B26(whitespace) \u6784\u6210</span>
    queryWrapper
            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;username&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>ageBegin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageBegin<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span>ageEnd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token string">&quot;age&quot;</span><span class="token punctuation">,</span> ageEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//SELECT id,username AS name,age,email,is_deleted FROM t_user WHERE (age &gt;= ? AND age &lt;= ?)</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+l+`" alt="solar"><h2 id="\u94FE\u5F0F\u8C03\u7528-lambda-\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u94FE\u5F0F\u8C03\u7528-lambda-\u5F0F" aria-hidden="true">#</a> \u94FE\u5F0F\u8C03\u7528 lambda \u5F0F</h2><p>\u83B7\u53D6 LambdaWrapper -\u5728QueryWrapper\u4E2D\u662F\u83B7\u53D6LambdaQueryWrapper -\u5728UpdateWrapper\u4E2D\u662F\u83B7\u53D6LambdaUpdateWrapper \u4EE3\u7801\u6F14\u793A\u5982\u4E0B\uFF0C\u6539\u6210\u94FE\u5F0F\u5199\u6CD5\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public List getUsersByIdAndDate(Integer userId,Integer age){
    //lambda\u6761\u4EF6\u6784\u9020\u5668
    LambdaQueryWrapper queryWrapper = new LambdaQueryWrapper&lt;&gt;();
    //\u4F20\u5165\u6761\u4EF6
    queryWrapper.eq(UserEntity::getId,userId);
    queryWrapper.eq(UserEntity::getAge,age);
    //\u8C03\u7528\u4FEE\u6539\u65B9\u6CD5
    return this.list(queryWrapper);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8BF4\u767D\u4E86\uFF0Clambda\u5F0F\u73A9\u6CD5\u4E5F\u4E00\u6837\uFF0C\u552F\u72EC\u5C31\u662F\u4F60\u8981\u5148\u5165\u95E8\u4E00\u4E0Bjava8\u65B0\u7279\u6027\u4E4Blambda\u8868\u8FBE\u5F0F\u8BED\u6CD5</p><h3 id="lambdaquerywrapper-\u7528\u4E8Elambda\u8BED\u6CD5\u4F7F\u7528\u7684\u67E5\u8BE2wrapper" tabindex="-1"><a class="header-anchor" href="#lambdaquerywrapper-\u7528\u4E8Elambda\u8BED\u6CD5\u4F7F\u7528\u7684\u67E5\u8BE2wrapper" aria-hidden="true">#</a> LambdaQueryWrapper \u7528\u4E8ELambda\u8BED\u6CD5\u4F7F\u7528\u7684\u67E5\u8BE2Wrapper</h3><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test09</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test09</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5B9A\u4E49\u67E5\u8BE2\u6761\u4EF6\uFF0C\u6709\u53EF\u80FD\u4E3Anull\uFF08\u7528\u6237\u672A\u8F93\u5165\uFF09</span>
    <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> ageBegin <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
    <span class="token class-name">Integer</span> ageEnd <span class="token operator">=</span> <span class="token number">24</span><span class="token punctuation">;</span>
    <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> queryWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaQueryWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u907F\u514D\u4F7F\u7528\u5B57\u7B26\u4E32\u8868\u793A\u5B57\u6BB5\uFF0C\u9632\u6B62\u8FD0\u884C\u65F6\u9519\u8BEF</span>
    queryWrapper
            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">ge</span><span class="token punctuation">(</span>ageBegin <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> ageBegin<span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">le</span><span class="token punctuation">(</span>ageEnd <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> ageEnd<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> users <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">selectList</span><span class="token punctuation">(</span>queryWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    users<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+i+`" alt="solar"><h3 id="lambdaupdatewrapper-lambda-\u66F4\u65B0\u5C01\u88C5wrapper" tabindex="-1"><a class="header-anchor" href="#lambdaupdatewrapper-lambda-\u66F4\u65B0\u5C01\u88C5wrapper" aria-hidden="true">#</a> LambdaUpdateWrapper Lambda \u66F4\u65B0\u5C01\u88C5Wrapper</h3><p>\u5728\u6D4B\u8BD5\u7C7BMybatisPlusServiceTest\u4E2D\u65B0\u589E\u65B9\u6CD5 <strong>test10</strong></p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test10</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u7EC4\u88C5set\u5B50\u53E5</span>
    <span class="token class-name">LambdaUpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> updateWrapper <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">LambdaUpdateWrapper</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    updateWrapper
            <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getEmail</span><span class="token punctuation">,</span> <span class="token string">&quot;bbbbbbbbbb@atguigu.com&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">like</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getName</span><span class="token punctuation">,</span> <span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">lt</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getAge</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isNull</span><span class="token punctuation">(</span><span class="token class-name">User</span><span class="token operator">::</span><span class="token function">getEmail</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//lambda \u8868\u8FBE\u5F0F\u5185\u7684\u903B\u8F91\u4F18\u5148\u8FD0\u7B97</span>
    <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> result <span class="token operator">=</span> userMapper<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>user<span class="token punctuation">,</span> updateWrapper<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D7\u5F71\u54CD\u7684\u884C\u6570\uFF1A&quot;</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>\u8FD0\u884C\u6D4B\u8BD5\u65B9\u6CD5\uFF0C\u7ED3\u679C</strong></p><img src="`+u+'" alt="solar">',110),g=[b];function h(y,q){return k(),d("div",null,g)}var W=r(v,[["render",h],["__file","mybatis-plus\u6761\u4EF6\u6784\u9020\u5668.html.vue"]]);export{W as default};
