import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";import{o as s,c as a,a as t}from"./app.73ec3e73.js";var p="/assets/bk227.a1a87136.png";const e={},o=t(`<h1 id="\u84DD\u7259\u5F00\u53D1\u6B65\u9AA4" tabindex="-1"><a class="header-anchor" href="#\u84DD\u7259\u5F00\u53D1\u6B65\u9AA4" aria-hidden="true">#</a> \u84DD\u7259\u5F00\u53D1\u6B65\u9AA4</h1><h2 id="_1-\u6253\u5F00\u84DD\u7259\u9002\u914D\u5668" tabindex="-1"><a class="header-anchor" href="#_1-\u6253\u5F00\u84DD\u7259\u9002\u914D\u5668" aria-hidden="true">#</a> 1.\u6253\u5F00\u84DD\u7259\u9002\u914D\u5668</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">openBluetoothAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span>
        wx<span class="token punctuation">.</span><span class="token function">openBluetoothAdapter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">mode</span><span class="token operator">:</span><span class="token string">&quot;central&quot;</span><span class="token punctuation">,</span><span class="token comment">//\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u5728ios\u7AEF\u9700\u8981</span>
            <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;open blueFi success: &#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
                that<span class="token punctuation">.</span><span class="token function">onBluetoothDeviceFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                that<span class="token punctuation">.</span><span class="token function">onBluetoothAdapterStateChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                that<span class="token punctuation">.</span><span class="token function">startBluetoothDevicesDiscovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span><span class="token punctuation">,</span>
            <span class="token function">fail</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token keyword">let</span> errorRes <span class="token operator">=</span> blueFi<span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>errorRes<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-\u6253\u5F00\u84DD\u7259\u641C\u7D22\u529F\u80FD" tabindex="-1"><a class="header-anchor" href="#_2-\u6253\u5F00\u84DD\u7259\u641C\u7D22\u529F\u80FD" aria-hidden="true">#</a> 2.\u6253\u5F00\u84DD\u7259\u641C\u7D22\u529F\u80FD</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">startBluetoothDevicesDiscovery</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        wx<span class="token punctuation">.</span><span class="token function">startBluetoothDevicesDiscovery</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
            <span class="token literal-property property">allowDuplicatesKey</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span>
			<span class="token literal-property property">interval</span><span class="token operator">:</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token comment">//\u5728ios\u7AEF\u8868\u73B0\u5FC5\u987B\u8BBE\u7F6E\u70B9\u65F6\u95F4\u624D\u53EF\u4EE5</span>
			<span class="token literal-property property">powerLevel</span><span class="token operator">:</span><span class="token string">&#39;high&#39;</span><span class="token punctuation">,</span>
            <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u6253\u5F00\u84DD\u7259\u641C\u7D22\u529F\u80FD\u6210\u529F&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3-\u76D1\u542C\u5BFB\u627E\u5230\u65B0\u8BBE\u5907\u7684\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#_3-\u76D1\u542C\u5BFB\u627E\u5230\u65B0\u8BBE\u5907\u7684\u4E8B\u4EF6" aria-hidden="true">#</a> 3.\u76D1\u542C\u5BFB\u627E\u5230\u65B0\u8BBE\u5907\u7684\u4E8B\u4EF6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>    <span class="token function">onBluetoothDeviceFound</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> that <span class="token operator">=</span> <span class="token keyword">this</span>
        wx<span class="token punctuation">.</span><span class="token function">onBluetoothDeviceFound</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> devices <span class="token operator">=</span> res<span class="token punctuation">.</span>devices<span class="token punctuation">;</span>

            that<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
                <span class="token literal-property property">devices</span><span class="token operator">:</span> devices
            <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4-\u76D1\u542C\u672C\u673A\u84DD\u7259\u72B6\u6001\u53D8\u5316\u7684\u4E8B\u4EF6" tabindex="-1"><a class="header-anchor" href="#_4-\u76D1\u542C\u672C\u673A\u84DD\u7259\u72B6\u6001\u53D8\u5316\u7684\u4E8B\u4EF6" aria-hidden="true">#</a> 4.\u76D1\u542C\u672C\u673A\u84DD\u7259\u72B6\u6001\u53D8\u5316\u7684\u4E8B\u4EF6</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">onBluetoothAdapterStateChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">onBluetoothAdapterStateChange</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;adapterState changed, now is&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5-\u83B7\u53D6\u5DF2\u53D1\u73B0\u7684\u84DD\u7259\u8BBE\u5907-\u5305\u62EC-\u5DF2\u7ECF\u548C\u672C\u673A\u5904\u4E8E\u8FDE\u63A5\u72B6\u6001\u7684\u8BBE\u5907" tabindex="-1"><a class="header-anchor" href="#_5-\u83B7\u53D6\u5DF2\u53D1\u73B0\u7684\u84DD\u7259\u8BBE\u5907-\u5305\u62EC-\u5DF2\u7ECF\u548C\u672C\u673A\u5904\u4E8E\u8FDE\u63A5\u72B6\u6001\u7684\u8BBE\u5907" aria-hidden="true">#</a> 5.\u83B7\u53D6\u5DF2\u53D1\u73B0\u7684\u84DD\u7259\u8BBE\u5907 \u5305\u62EC \u5DF2\u7ECF\u548C\u672C\u673A\u5904\u4E8E\u8FDE\u63A5\u72B6\u6001\u7684\u8BBE\u5907</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getBluetoothDevices</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    uni<span class="token punctuation">.</span><span class="token function">getBluetoothDevices</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>devices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">ab2hex</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>devices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>advertisData<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_6-\u83B7\u53D6\u7279\u5F81\u503C" tabindex="-1"><a class="header-anchor" href="#_6-\u83B7\u53D6\u7279\u5F81\u503C" aria-hidden="true">#</a> 6.\u83B7\u53D6\u7279\u5F81\u503C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getBLEDeviceCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
  uni<span class="token punctuation">.</span><span class="token function">getBLEDeviceCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 deviceId \u9700\u8981\u5DF2\u7ECF\u901A\u8FC7 createBLEConnection \u4E0E\u5BF9\u5E94\u8BBE\u5907\u5EFA\u7ACB\u94FE\u63A5</span>
  deviceId<span class="token punctuation">,</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 serviceId \u9700\u8981\u5728 getBLEDeviceServices \u63A5\u53E3\u4E2D\u83B7\u53D6</span>
  serviceId<span class="token punctuation">,</span>
  <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;device getBLEDeviceCharacteristics:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>characteristics<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_7-\u5F00\u542F\u8BA2\u9605\u503C" tabindex="-1"><a class="header-anchor" href="#_7-\u5F00\u542F\u8BA2\u9605\u503C" aria-hidden="true">#</a> 7.\u5F00\u542F\u8BA2\u9605\u503C</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">notifyBLECharacteristicValueChange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
uni<span class="token punctuation">.</span><span class="token function">notifyBLECharacteristicValueChange</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token comment">// \u542F\u7528 notify \u529F\u80FD</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 deviceId \u9700\u8981\u5DF2\u7ECF\u901A\u8FC7 createBLEConnection \u4E0E\u5BF9\u5E94\u8BBE\u5907\u5EFA\u7ACB\u94FE\u63A5</span>
  deviceId<span class="token punctuation">,</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 serviceId \u9700\u8981\u5728 getBLEDeviceServices \u63A5\u53E3\u4E2D\u83B7\u53D6</span>
  serviceId<span class="token punctuation">,</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 characteristicId \u9700\u8981\u5728 getBLEDeviceCharacteristics \u63A5\u53E3\u4E2D\u83B7\u53D6</span>
  characteristicId<span class="token punctuation">,</span>
  <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> value <span class="token operator">=</span> that<span class="token punctuation">.</span><span class="token function">ab2hex</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ArrayBuffer\u8F6C16\u8FDB\u5EA6\u5B57\u7B26\u4E32\u793A\u4F8B</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;notifyBLECharacteristicValueChange success&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>errMsg<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_8-\u8FDE\u63A5\u8BBE\u5907" tabindex="-1"><a class="header-anchor" href="#_8-\u8FDE\u63A5\u8BBE\u5907" aria-hidden="true">#</a> 8. \u8FDE\u63A5\u8BBE\u5907</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">createBLEConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    uni<span class="token punctuation">.</span><span class="token function">getBLEDeviceServices</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">// \u8FD9\u91CC\u7684 deviceId \u9700\u8981\u5DF2\u7ECF\u901A\u8FC7 createBLEConnection \u4E0E\u5BF9\u5E94\u8BBE\u5907\u5EFA\u7ACB\u94FE\u63A5</span>
  deviceId<span class="token punctuation">,</span>
  <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;device services:&#39;</span><span class="token punctuation">,</span> res<span class="token punctuation">.</span>services<span class="token punctuation">)</span>
   <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getBLEDeviceCharacteristics</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//\u83B7\u53D6\u7279\u5F81\u503C</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	that<span class="token punctuation">.</span><span class="token function">notifyBLECharacteristicValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// \u5F00\u542F\u8BA2\u9605</span>
        <span class="token keyword">let</span> wifi <span class="token operator">=</span> <span class="token string">&quot;chenKKK&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> newWifi <span class="token operator">=</span>  <span class="token function">stringToUint8Array</span><span class="token punctuation">(</span>wifi <span class="token punctuation">)</span> <span class="token comment">//  string \u8F6C\u5316\u4E3A unit8array\u7684\u51FD\u6570</span>
	that<span class="token punctuation">.</span><span class="token function">writeBLECharacteristicValue</span><span class="token punctuation">(</span><span class="token string">&#39;53&#39;</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span>newWifi <span class="token punctuation">)</span> <span class="token comment">//\u53D1\u9001\u5199\u5165\u6570\u636E	// \u6307\u4EE4\uFF0C \u957F\u5EA6\uFF0C \u503C \uFF0C \u8FD9\u91CC\u6839\u636E\u8BBE\u5907\u7684\u534F\u8BAE\u53D1				</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_9-\u5199\u5165\u6570\u636E" tabindex="-1"><a class="header-anchor" href="#_9-\u5199\u5165\u6570\u636E" aria-hidden="true">#</a> 9.\u5199\u5165\u6570\u636E</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token function">writeBLECharacteristicValue</span><span class="token punctuation">(</span><span class="token parameter">typeNum<span class="token punctuation">,</span>subCMD<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
		<span class="token keyword">let</span> deviceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bindDeviceMes<span class="token punctuation">.</span>deviceId<span class="token punctuation">;</span>
		<span class="token keyword">let</span> serviceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bindDeviceMes<span class="token punctuation">.</span>serviceId<span class="token punctuation">;</span>
		<span class="token keyword">let</span> characteristicId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bindDeviceMes<span class="token punctuation">.</span>writeId<span class="token punctuation">;</span>
		<span class="token keyword">var</span> beffer <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayBuffer</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
		<span class="token keyword">var</span> bufView <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>beffer<span class="token punctuation">)</span>
		bufView<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> typeNum <span class="token comment">// \u6307\u4EE41</span>
		bufView<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> subCMD <span class="token operator">?</span> bufView<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> subCMD <span class="token operator">:</span> bufView<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">.</span>length <span class="token comment">// \u6307\u4EE42</span>
			<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">18</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span> <span class="token comment">// 3-18\u4F4D\u503C\uFF08\u4E00\u517120\uFF0C\u6211\u8FD9\u91CC\u4E0D\u6EE120\u4F4D\u88650\uFF09</span>
				<span class="token keyword">let</span> item <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
				<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>item<span class="token punctuation">)</span><span class="token punctuation">{</span>
					bufView<span class="token punctuation">[</span><span class="token number">2</span><span class="token operator">+</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
				<span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>
					bufView<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">+</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> data<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u53D1\u9001\u5199\u5165\u6307\u4EE4:&#39;</span> <span class="token operator">+</span> <span class="token function">String</span><span class="token punctuation">(</span>bufView<span class="token punctuation">)</span><span class="token punctuation">)</span>
		<span class="token comment">// plus.bluetooth.writeBLECharacteristicValue({    //12.25\u66F4\u6539</span>
		uni<span class="token punctuation">.</span><span class="token function">writeBLECharacteristicValue</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token comment">// \u8FD9\u91CC\u7684 deviceId \u9700\u8981\u5728 getBluetoothDevices \u6216 onBluetoothDeviceFound \u63A5\u53E3\u4E2D\u83B7\u53D6</span>
			deviceId<span class="token punctuation">,</span>
			<span class="token comment">// \u8FD9\u91CC\u7684 serviceId \u9700\u8981\u5728 getBLEDeviceServices \u63A5\u53E3\u4E2D\u83B7\u53D61</span>
			serviceId<span class="token punctuation">,</span>
			<span class="token comment">// \u8FD9\u91CC\u7684 characteristicId \u9700\u8981\u5728 getBLEDeviceCharacteristics \u63A5\u53E3\u4E2D\u83B7\u53D6</span>
			characteristicId<span class="token punctuation">,</span>
			<span class="token comment">// \u8FD9\u91CC\u7684value\u662FArrayBuffer\u7C7B\u578B</span>
			<span class="token literal-property property">value</span><span class="token operator">:</span> beffer<span class="token punctuation">,</span>
			<span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6210\u529F&#39;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
				that<span class="token punctuation">.</span>testList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6570\u636E\u6210\u529F&#39;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//test4</span>
			<span class="token punctuation">}</span><span class="token punctuation">,</span>
			<span class="token function">fail</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				that<span class="token punctuation">.</span>testList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;\u5199\u5165\u6570\u636E\u5931\u8D25&#39;</span> <span class="token operator">+</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//test4</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u5199\u5165\u6570\u636E\u5931\u8D25&quot;</span> <span class="token operator">+</span> res<span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_10-\u65AD\u5F00\u84DD\u7259\u8FDE\u63A5" tabindex="-1"><a class="header-anchor" href="#_10-\u65AD\u5F00\u84DD\u7259\u8FDE\u63A5" aria-hidden="true">#</a> 10. \u65AD\u5F00\u84DD\u7259\u8FDE\u63A5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>	<span class="token function">closeBluetoothAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> that <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
		that<span class="token punctuation">.</span>reConnectNum <span class="token operator">=</span> <span class="token number">0</span>
		<span class="token keyword">let</span> deviceId <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>bindDeviceMes<span class="token punctuation">.</span>deviceId<span class="token punctuation">;</span>
		uni<span class="token punctuation">.</span><span class="token function">closeBLEConnection</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			deviceId<span class="token punctuation">,</span>
			<span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				that<span class="token punctuation">.</span>testList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;\u65AD\u5F00\u84DD\u7259\u6A21\u5757\u8FDE\u63A5&#39;</span><span class="token punctuation">)</span> <span class="token comment">//test4</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span>
		uni<span class="token punctuation">.</span><span class="token function">closeBluetoothAdapter</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
			<span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token parameter">res</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
				that<span class="token punctuation">.</span>testList<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;\u65AD\u5F00\u84DD\u7259\u6A21\u5757\u6210\u529F&#39;</span><span class="token punctuation">)</span> <span class="token comment">//test4</span>
				console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u65AD\u5F00\u84DD\u7259\u6A21\u5757\u6210\u529F&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		that<span class="token punctuation">.</span>blueHadConnected <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_11-arraybuffer\u8F6C16\u8FDB\u5EA6\u5B57\u7B26\u4E32\u793A\u4F8B-\u63A5\u53D7\u84DD\u7259\u8FD4\u56DE\u65F6\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#_11-arraybuffer\u8F6C16\u8FDB\u5EA6\u5B57\u7B26\u4E32\u793A\u4F8B-\u63A5\u53D7\u84DD\u7259\u8FD4\u56DE\u65F6\u4F7F\u7528" aria-hidden="true">#</a> 11.ArrayBuffer\u8F6C16\u8FDB\u5EA6\u5B57\u7B26\u4E32\u793A\u4F8B (\u63A5\u53D7\u84DD\u7259\u8FD4\u56DE\u65F6\u4F7F\u7528)</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">ab2hex</span><span class="token punctuation">(</span><span class="token parameter">buffer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> hexArr <span class="token operator">=</span> <span class="token class-name">Array</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
    <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>buffer<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">bit</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token string">&#39;00&#39;</span> <span class="token operator">+</span> bit<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
  <span class="token keyword">return</span> hexArr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_12-\u5C06string-\u8F6C\u5316\u4E3A-unit8array\u7684\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#_12-\u5C06string-\u8F6C\u5316\u4E3A-unit8array\u7684\u51FD\u6570" aria-hidden="true">#</a> 12. \u5C06string \u8F6C\u5316\u4E3A unit8array\u7684\u51FD\u6570</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">stringToUint8Array</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">let</span> pos <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token keyword">const</span> len <span class="token operator">=</span> string<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
	<span class="token keyword">const</span> out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token keyword">let</span> at <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">// output position</span>
	<span class="token keyword">let</span> tlen <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> len <span class="token operator">+</span> <span class="token punctuation">(</span>len <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 1.5x size</span>
	<span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tlen <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// ... but at 8 byte offset</span>
	<span class="token keyword">while</span> <span class="token punctuation">(</span>pos <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">let</span> value <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>pos<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&gt;=</span> <span class="token number">0xd800</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">&lt;=</span> <span class="token number">0xdbff</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
			<span class="token comment">// high surrogate</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>pos <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">const</span> extra <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">charCodeAt</span><span class="token punctuation">(</span>pos<span class="token punctuation">)</span><span class="token punctuation">;</span>
				<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>extra <span class="token operator">&amp;</span> <span class="token number">0xfc00</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0xdc00</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
					<span class="token operator">++</span>pos<span class="token punctuation">;</span>
					value <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0x3ff</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>extra <span class="token operator">&amp;</span> <span class="token number">0x3ff</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">0x10000</span><span class="token punctuation">;</span>
				<span class="token punctuation">}</span>
			<span class="token punctuation">}</span>
			<span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&gt;=</span> <span class="token number">0xd800</span> <span class="token operator">&amp;&amp;</span> value <span class="token operator">&lt;=</span> <span class="token number">0xdbff</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
				<span class="token keyword">continue</span><span class="token punctuation">;</span> <span class="token comment">// drop lone surrogate</span>
			<span class="token punctuation">}</span>
		<span class="token punctuation">}</span>
		<span class="token comment">// expand the buffer if we couldn&#39;t write 4 bytes</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>at <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">&gt;</span> target<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
			tlen <span class="token operator">+=</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token comment">// minimum extra</span>
			tlen <span class="token operator">*=</span> <span class="token punctuation">(</span><span class="token number">1.0</span> <span class="token operator">+</span> <span class="token punctuation">(</span>pos <span class="token operator">/</span> string<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// take 2x the remaining</span>
			tlen <span class="token operator">=</span> <span class="token punctuation">(</span>tlen <span class="token operator">&gt;&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">3</span><span class="token punctuation">;</span> <span class="token comment">// 8 byte offset</span>
			<span class="token keyword">const</span> update <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Uint8Array</span><span class="token punctuation">(</span>tlen<span class="token punctuation">)</span><span class="token punctuation">;</span>
			update<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
			target <span class="token operator">=</span> update<span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0xffffff80</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 1-byte</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">;</span> <span class="token comment">// ASCII</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0xfffff800</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 2-byte</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x1f</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0xc0</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0xffff0000</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 3-byte</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x0f</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0xe0</span><span class="token punctuation">;</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3f</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0xffe00000</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// 4-byte</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x07</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0xf0</span><span class="token punctuation">;</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3f</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">;</span>
			target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>value <span class="token operator">&gt;&gt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3f</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
			<span class="token comment">// FIXME: do we care</span>
			<span class="token keyword">continue</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span>
		target<span class="token punctuation">[</span>at<span class="token operator">++</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>value <span class="token operator">&amp;</span> <span class="token number">0x3f</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token number">0x80</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	<span class="token keyword">return</span> target<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> at<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_13-unit8array\u8F6C\u5316\u4E3A-string\u7684\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#_13-unit8array\u8F6C\u5316\u4E3A-string\u7684\u65B9\u6CD5" aria-hidden="true">#</a> 13. unit8array\u8F6C\u5316\u4E3A string\u7684\u65B9\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Unit8ArrayToStr</span><span class="token punctuation">(</span><span class="token parameter">array</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> out<span class="token punctuation">,</span> i<span class="token punctuation">,</span> len<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
    <span class="token keyword">var</span> char2<span class="token punctuation">,</span> char3<span class="token punctuation">;</span>

    out <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
    len <span class="token operator">=</span> array<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
    i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> len<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        c <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>c <span class="token operator">&gt;&gt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>
                <span class="token comment">// 0xxxxxxx</span>
                out <span class="token operator">+=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">12</span><span class="token operator">:</span>
            <span class="token keyword">case</span> <span class="token number">13</span><span class="token operator">:</span>
                <span class="token comment">// 110x xxxx 10xx xxxx</span>
                char2 <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                out <span class="token operator">+=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">&amp;</span> <span class="token number">0x1F</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>char2 <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token keyword">case</span> <span class="token number">14</span><span class="token operator">:</span>
                <span class="token comment">// 1110 xxxx 10xx xxxx 10xx xxxx</span>
                char2 <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                char3 <span class="token operator">=</span> array<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
                out <span class="token operator">+=</span> String<span class="token punctuation">.</span><span class="token function">fromCharCode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>c <span class="token operator">&amp;</span> <span class="token number">0x0F</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">12</span><span class="token punctuation">)</span> <span class="token operator">|</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>char2 <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">|</span>
                    <span class="token punctuation">(</span><span class="token punctuation">(</span>char3 <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">return</span> out<span class="token punctuation">;</span>
<span class="token punctuation">}</span>


</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><img src="`+p+'" alt="solar">',28),c=[o];function l(i,u){return s(),a("div",null,c)}var d=n(e,[["render",l],["__file","\u84DD\u7259\u5F00\u53D1\u6B65\u9AA4.html.vue"]]);export{d as default};
